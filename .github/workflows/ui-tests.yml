name: 'UI Tests'

on: push

jobs:
  # Install and cache npm dependencies
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Cache bun dependencies
        uses: actions/cache@v3
        id: bun-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun

      - name: Install dependencies if cache invalid
        if: steps.bun-cache.outputs.cache-hit != 'true'
        run: bun i --frozen-lockfile

  check: # This job is for checking the code style and type errors.
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Restore bun dependencies
        id: bun-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun

      - name: üíÖüèª Type Check, Lint and format
        run: bun run check 

  # Build storybook
  # build-storybook:
  #   runs-on: ubuntu-latest
  #   needs: install-dependencies
  #   steps:
  #     - name: Checkout Commit
  #       uses: actions/checkout@v3

  #     - name: Setup Bun
  #       uses: oven-sh/setup-bun@v1
  #       with:
  #         bun-version: latest

  #     - name: Restore bun dependencies
  #       id: bun-cache
  #       uses: actions/cache@v3
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
  #         restore-keys: ${{ runner.os }}-bun

  #     - name: Cache Storybook
  #       id: storybook_cache
  #       uses: actions/cache@v3
  #       with:
  #         path: storybook-static
  #         key: ${{ runner.os }}-${{ github.sha }}

  #     - name: Build Storybook
  #       run: bun run storybook:build --quiet

  # TODO: Add Snapshot tests
  
